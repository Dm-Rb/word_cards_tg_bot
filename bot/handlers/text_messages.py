from aiogram import Router, F
from aiogram.types import Message
from bot.keyboards.inline import get_kb__yes_no_answer
from bot.globals import database
from bot.services.utils import detect_language, grouping_array_by_pos, preparing_array_tuple2dict
from bot.templates.text import word_details as preparing_message
from bot.services.api_clients import ya_dict_api


router = Router()


@router.message(F.text)  # –•–µ–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def user_word_handler(message: Message):
    """
    –î–æ–ø–∏–ª–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É API –Ω–∞ —Ä—É—Å—Å–∫–æ–º!!!
    """
    word = message.text.strip().lower()  # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
    lang = detect_language(word)
    if not lang:
        await message.answer("üôÖ‚Äç‚ôÇÔ∏è C—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã (—Ü–∏—Ñ—Ä—ã, —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –∏ —Ç.–¥.)")
        return
    # –ü–æ–ª—É—á–∏—Ç—å id, –µ—Å–ª–∏ —ç—Ç–æ —Å–ª–æ–≤–æ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    word_id = await database.get_row_id_by_value_from_table__words(word, lang)
    # –°–ª–æ–≤–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ë–î.
    if word_id:
        # –ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ c <word>
        word_details: list[tuple] = await database.get_translations_word_by_id(word_id, lang)
        if not word_details:
            await message.answer("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
            return
        # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ—Ç–≤–µ—Ç –∏–∑ –±–¥ (—Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π) –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π (—Ç—É–ø–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–ª—é—á–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º)
        word_details: list[dict] = preparing_array_tuple2dict(word_details)
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π –≤ —Å–ª–æ–≤–∞—Ä—å. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —á–∞—Å—Ç—è–º —Ä–µ—á–∏ (—Å—Ç–∞–∫–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ —á–∞—Å—Ç—è–º —Ä–µ—á–∏)
        word_details: dict = grouping_array_by_pos(word_details, lang)
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –±–∞–∑–µ —à–∞–±–ª–æ–Ω–∞
        await message.answer(text=preparing_message(word_details, lang), parse_mode='HTML')
    # –°–ª–æ–≤–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ë–î, –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Yandex Dictionary
    else:
        # –ó–∞–ø—Ä–æ—Å –∫ APi
        ya_dict_api_resp = await ya_dict_api.get_word_details_from_ya_dict(word, lang)
        # –ï—Å–ª–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
        if not ya_dict_api_resp:
            await message.answer("ü§∑ –°–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏ –≤–≤–æ–¥–µ –±—ã–ª–∞ –¥–æ–ø—É—â–µ–Ω–∞ –æ–ø–µ—á–∞—Ç–∫–∞")
            return
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π –≤ —Å–ª–æ–≤–∞—Ä—å. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —á–∞—Å—Ç—è–º —Ä–µ—á–∏ (—Å—Ç–∞–∫–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ —á–∞—Å—Ç—è–º —Ä–µ—á–∏)
        word_details: dict = grouping_array_by_pos(ya_dict_api_resp, lang)
        await message.answer(text=preparing_message(word_details, lang), parse_mode='HTML')

    # –¢–µ–∫—Å—Ç –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ check_word
    # reply_text = f"{word}\n–î–æ–±–∞–≤–∏—Ç—å –≤ –≤–∞—à –ª–∏—á–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è?"
    #
    # # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ inline.py
    # keyboard = get_kb__yes_no_answer(word)
    #
    # # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    # await message.answer(reply_text, reply_markup=keyboard)