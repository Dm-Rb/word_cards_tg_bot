from bot.services.utils import frequency_word


def start_command(user_first_name, is_new_user: bool) -> str:
    if not is_new_user:
        message = \
        f"""–ü—Ä–∏–≤–µ—Ç, {user_first_name}! üëã
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∏–∑—É—á–∞—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ –º–µ—Ç–æ–¥–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è."""
    else:
        message = f"""C –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_first_name}! üëã"""

    return message


def word_details(word_details_dict, lang):
    lags_emoji = {'en': 'üá¨üáß', 'ru': 'üá∑üá∫'}
    message = ''
    message += f"<b>{word_details_dict['word'].capitalize()}</b>  {lags_emoji[lang]}"
    for item_transl in word_details_dict['translations']:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º <i> —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∑–∞–∫—Ä—ã—Ç–∏–µ–º </i>
        transl_text = f"\nüìé <i>{item_transl['pos_en']}/{item_transl['pos_ru']}:</i>\n"
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
        transl_text += ', '.join([f"{item['word']} <i>({frequency_word(item['freq'])})</i>" for item in item_transl['words_list']])
        message += '\n' + transl_text
    return message

def question_without_context(word, pos_en, pos_ru):
    message = ''
    message += f"<b>{word.capitalize()}</b>\n"
    message += f"üìé <i>{pos_en}/{pos_ru}:</i>\n"
    return message

def show_statistic_training(results):
    answers = ''
    wrong_count = 0
    correct_counter = 0
    for item in results:
        if item['answer_is_correct']:
            correct_counter += 1
        else:
            wrong_count += 1
            answers += f"<b>{item['word']}</b> <i>({item['pos']})</i> –≤–∞—à –æ—Ç–≤–µ—Ç: üî¥ {item['user_answer']}\n"

    message = f'‚úÖ –í–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {str(correct_counter)}\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {str(wrong_count)}'
    if answers:
        message = message + '\n\n–°–ø–∏—Å–æ–∫ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç–æ–≤:\n' + answers
    return message

